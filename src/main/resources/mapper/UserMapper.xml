<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ky.clothing.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.ky.clothing.entity.User">
        <id column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="login_account" jdbcType="VARCHAR" property="loginAccount"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="id_card" jdbcType="VARCHAR" property="idCard"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl"/>
        <result column="manage" jdbcType="BOOLEAN" property="manage"/>
        <result column="user_valid" jdbcType="BOOLEAN" property="userValid"/>
    </resultMap>
    <sql id="Base_Column_List">
            user_id,
            login_account,
            `password`,
            id_card,
            phone,
            email,
            sex,
            avatar_url,
            manage,
            user_valid
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `user`
        where user_id = #{userId,jdbcType=INTEGER}
    </select>
    <insert id="insert" keyColumn="user_id" keyProperty="userId" parameterType="com.ky.clothing.entity.User"
            useGeneratedKeys="true">
        insert into `user` (login_account, `password`, id_card,
                            phone, email, sex, avatar_url,
                            manage, user_valid)
        values (#{loginAccount,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR},
                #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR},
                #{avatarUrl,jdbcType=VARCHAR},
                #{manage,jdbcType=BOOLEAN}, #{userValid,jdbcType=BOOLEAN})
    </insert>
    <insert id="insertSelective" keyColumn="user_id" keyProperty="userId" parameterType="com.ky.clothing.entity.User"
            useGeneratedKeys="true">
        insert into `user`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="loginAccount != null">
                login_account,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="idCard != null">
                id_card,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="avatarUrl != null">
                avatar_url,
            </if>
            <if test="manage != null">
                manage,
            </if>
            <if test="userValid != null">
                user_valid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="loginAccount != null">
                #{loginAccount,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="idCard != null">
                #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=VARCHAR},
            </if>
            <if test="avatarUrl != null">
                #{avatarUrl,jdbcType=VARCHAR},
            </if>
            <if test="manage != null">
                #{manage,jdbcType=BOOLEAN},
            </if>
            <if test="userValid != null">
                #{userValid,jdbcType=BOOLEAN},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ky.clothing.entity.User">
        update `user`
        <set>
            <if test="idCard != null">
                id_card = #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=VARCHAR},
            </if>
            <if test="avatarUrl != null">
                sex = #{avatarUrl,jdbcType=VARCHAR},
            </if>
        </set>
        where user_valid = 1
        and user_id = #{userId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ky.clothing.entity.User">
        update `user`
        set login_account = #{loginAccount,jdbcType=VARCHAR},
            `password`    = #{password,jdbcType=VARCHAR},
            id_card       = #{idCard,jdbcType=VARCHAR},
            phone         = #{phone,jdbcType=VARCHAR},
            email         = #{email,jdbcType=VARCHAR},
            sex           = #{sex,jdbcType=VARCHAR},
            avatar_url    = #{avatarUrl,jdbcType=VARCHAR},
            manage        = #{manage,jdbcType=BOOLEAN},
            user_valid    = #{userValid,jdbcType=BOOLEAN}
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <select id="selectUserByLoginAccountAndPassword" resultMap="BaseResultMap" parameterType="user">
        select user_id,
               password,
               login_account,
               id_card,
               phone,
               email,
               sex,
               avatar_url,
               manage
        from `user`
        where user_valid = 1
          and login_account = #{loginAccount}
    </select>
    <!-- 根据id修改用户密码 -->
    <update id="updatePasswordByUserId" parameterType="user">
        update `user`
        set `password` = #{password}
        where user_valid = 1
          and user_id = #{userId}
    </update>
    <!-- 根据用户id修改用户的头像url -->
    <update id="updateAvatarUrlByUserId" parameterType="user">
        update `user`
        set avatar_url = #{avatarUrl}
        where user_valid = 1
          and user_id = #{userId}
    </update>
    <!-- 根据邮箱查询用户id和账号-->
    <select id="selectUserIdByEmail" resultMap="BaseResultMap" parameterType="string">
        select user_id, login_account
        from `user`
        where user_valid = 1
          and email = #{email}
    </select>
    <!-- 查询对应email的数量 -->
    <select id="selectCountEmail" resultType="java.lang.Integer" parameterType="string">
        SELECT COUNT(user_id)
        FROM `user`
        WHERE user_valid = 1
          AND email = #{email}
    </select>
    <!-- 查询对应账号的数量 -->
    <select id="selectCountLoginAccount" resultType="java.lang.Integer" parameterType="string">
        SELECT COUNT(user_id)
        FROM `user`
        WHERE user_valid = 1
          AND login_account = #{loginAccount}
    </select>
</mapper>